/*
 * PanelVideo.java
 *
 * Created on 01 Oct 2014
 */
package com.est.views;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.Authenticator;
import java.net.MalformedURLException;
import java.net.PasswordAuthentication;
import java.net.URL;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;

/**
 *
 * @author Bro0k
 */
public class PanelVideoCam_2 extends javax.swing.JPanel {
    private boolean hayConexion = false;
    private String direccionIP = "";
    private String usuario = "";
    private String contra = "";
    public BufferedImage imagen = null;
    private URL nurl = null;
    
    /** Creates new form PanelVideo */
    public PanelVideoCam_2() {
        initComponents();
    }

    public boolean isHayConexion() {
        return hayConexion;
    }

    public void setHayConexion(boolean hayConexion) {
        this.hayConexion = hayConexion;
    }
    
    public boolean getHayConexion() {        
        return this.hayConexion;
    }
    
    /**
    RECIBE LA DIRECCION IP PARA ESTABLECAR LA CONEXION
    String direccionIP
    */
    public void setDireccionIP(String direccionIP) {
        this.direccionIP = direccionIP;
    }
    
    /**
    RECIBE EL USUARIO PARA AUTENTICAR LA CONEXION IP
    String usuario
    */
    public void setUsuario(String usuario) {
        this.usuario = usuario;
    }
    
    /**
    RECIBE LA CONTRASEÑA PARA AUTENTICAR LA CONEXION IP
    String contra
    */
    public void setContra(String contra) {
        this.contra = contra;
    }

    @Override
    public void paintComponent(Graphics g) {
        Graphics2D g2 = (Graphics2D) g;
       
        if (hayConexion) {            
            try {
                try {
                    nurl = new URL(this.direccionIP);//"http://192.168.1.88/tmpfs/auto.jpg"
                   
                } catch (MalformedURLException e) {
                    e.printStackTrace();                     
                }
                Authenticator au = new Authenticator() {@Override
                    protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication (usuario, contra.toCharArray());
                    }
                };
                Authenticator.setDefault(au);
                
                imagen = ImageIO.read(nurl);
                if (imagen != null) {
                     viewPrincipal.error.setText(" ");
                    g2.drawImage(imagen.getScaledInstance(500 , 275  , 1), 0, 0, this);                    
                  //  repaint();
                }
            }catch (MalformedURLException e) {
                    e.printStackTrace();  
                    hayConexion = false;
            }catch (IOException ex) {
                hayConexion = false;  //+this.direccionIP
                //JOptionPane.showMessageDialog(null, "Verifique la conexión a la cámara ", "Error leer la imagen", JOptionPane.ERROR_MESSAGE);                
            } 
        } else {            
            //JOptionPane.showMessageDialog(null, "Verifique la conexión a la cámara"+this.direccionIP, "Error al accesar a la cámara", JOptionPane.ERROR_MESSAGE);
            //viewPrincipal.error.setText("Verifique la conexión a la cámara");                 
            g2.drawString("No se ha establecido conexión con el dispositivo.", 5, 15); 
           // repaint();
            try {
                    nurl = new URL(this.direccionIP);//"http://192.168.1.88/tmpfs/auto.jpg"
                    hayConexion = true;
                    
                } catch (MalformedURLException e) {
                    e.printStackTrace();
                }
                Authenticator au = new Authenticator() {@Override
                    protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication (usuario, contra.toCharArray());
                    }
                };
                Authenticator.setDefault(au);
                
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        setFocusable(false);
        setMaximumSize(new java.awt.Dimension(500, 275));
        setMinimumSize(new java.awt.Dimension(500, 275));
        setPreferredSize(new java.awt.Dimension(500, 275));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 636, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 476, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
